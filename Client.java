/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package market;

import Shared.Product;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Shared.MarketInterface;

/**
 *
 * @author Worood
 */
public class Client extends javax.swing.JFrame {
    
   private static ArrayList<Product> htc;
   private static ArrayList<Product> samsung;
   private static ArrayList<Product> sony;
   private static ArrayList<Product> iphone;
   private static ArrayList<Product> huawei;
   private static ArrayList<Product> cart;
   
   MarketInterface m;
   ArrayList<Product> ar;
    /**
     * Creates new form Client
     */
   
    public Client() {
        htc = new ArrayList<>();
        iphone = new ArrayList<>();
        sony = new ArrayList<>();
        huawei = new ArrayList<>();
        samsung = new ArrayList<>();
        cart = new ArrayList<>();
        
         ar =new ArrayList<>();
           connect();
        
        
        initComponents();
    }
    public void connect(){
       try {
           Registry reg = LocateRegistry.getRegistry("localhost", 1099);
           m= (MarketInterface) reg.lookup("rmi://localhost//market");
           
       } catch (RemoteException ex) {
           Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
       } catch (NotBoundException ex) {
           Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
       }
             
             
    }
    
    public void fillCartTable(){
        
        int row = 0;
      
        DefaultTableModel df = (DefaultTableModel) cartTable.getModel();
        df.setRowCount(0);
           Object [] ob = new Object[3];
        for(Product p : cart){
           if(p.getQty()==0) continue;
            df =  (DefaultTableModel) cartTable.getModel();
            df.addRow(ob);
          
           cartTable.getModel().setValueAt(p.getName(), row, 0);
           cartTable.getModel().setValueAt(p.getQty(), row, 1);
           cartTable.getModel().setValueAt(p.getPrice(), row, 2);
           row++;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        category = new javax.swing.JComboBox<String>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        productsTable = new javax.swing.JTable();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        getInvoice = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        category.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "HTC", "Huawei", "sony", "Samsung", "iPhone", " " }));

        jButton1.setText("Show");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        productsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "product name", "price", "quantity"
            }
        ));
        jScrollPane1.setViewportView(productsTable);

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jButton4.setText("Calculate");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        getInvoice.setText("Retrieve");
        getInvoice.setActionCommand("Return");

        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Quantity", "Price"
            }
        ));
        jScrollPane3.setViewportView(cartTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(getInvoice))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(add)
                                    .addComponent(delete))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(getInvoice)
                            .addComponent(add))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(delete)))
                .addGap(35, 35, 35)
                .addComponent(jButton4)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       try {
           // TODO add your handling code here:
           String c = (String) category.getSelectedItem();
           ar = m.showProduct(c);
           if(c.equalsIgnoreCase("htc")){
               htc = ar;
               int row = 0;
               
               for(Product s: htc){
                   productsTable.getModel().setValueAt(s.getName(),row , 0);
                   productsTable.getModel().setValueAt(s.getPrice(),row , 1);
                   productsTable.getModel().setValueAt(s.getQty(),row , 2);
                   row++;
                   
               }
           }else  if(c.equalsIgnoreCase("huawei")){
               int row = 0;
               huawei = ar;
               for(Product s: huawei){
                   productsTable.getModel().setValueAt(s.getName(),row , 0);
                   productsTable.getModel().setValueAt(s.getPrice(),row , 1);
                   productsTable.getModel().setValueAt(s.getQty(),row , 2);
                   row++;
                   
               }
               
           }else  if(c.equalsIgnoreCase("sony")){
               int row = 0;
               sony = ar;
               for(Product s: sony){
                   productsTable.getModel().setValueAt(s.getName(),row , 0);
                   productsTable.getModel().setValueAt(s.getPrice(),row , 1);
                   productsTable.getModel().setValueAt(s.getQty(),row , 2);
                   row++;
                   
               }
               
           }else  if(c.equalsIgnoreCase("iphone")){
               int row = 0;
               iphone = ar;
               for(Product s: iphone){
                   productsTable.getModel().setValueAt(s.getName(),row , 0);
                   productsTable.getModel().setValueAt(s.getPrice(),row , 1);
                   productsTable.getModel().setValueAt(s.getQty(),row , 2);
                   row++;
                   
               }
           }else {
               int row = 0;
               samsung = ar;
               for(Product s: samsung){
                   productsTable.getModel().setValueAt(s.getName(),row , 0);
                   productsTable.getModel().setValueAt(s.getPrice(),row , 1);
                   productsTable.getModel().setValueAt(s.getQty(),row , 2);
                   row++;
                   
               }
           }
       } catch (RemoteException ex) {
           Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
          int p = productsTable.getSelectedRow();
           String c = (String) category.getSelectedItem();
           Product selected ;
           
          int q = (int) productsTable.getModel().getValueAt(p, 2);
           if(q ==0) JOptionPane.showMessageDialog( this, "You can't add");
           else{
           productsTable.getModel().setValueAt(q-1, p, 2 );
        try {
           // TODO add your handling code here:
           
           
           if(c.equalsIgnoreCase("sony")){
               selected = sony.get(p);
           }else
               if(c.equalsIgnoreCase("huawei")){
                   selected = huawei.get(p);
               }else
                   if(c.equalsIgnoreCase("htc")){
                       selected = htc.get(p);
                   }else if(c.equalsIgnoreCase("iphone")){
                       selected = iphone.get(p);
                   }else{
                       selected =samsung.get(p);
                   }
           
           m.addProduct(selected, c);
           cart = m.getCart();
           fillCartTable();
          
       } catch (RemoteException ex) {
           Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
       }
           }
    }//GEN-LAST:event_addActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
         // TODO add your handling code here:
           int r = cartTable.getSelectedRow();
          System.out.println("Selected row in cart is " + r);
           int p = 0;
           String item = (String) cartTable.getModel().getValueAt(r,0 );
           System.out.println("Item is " + item);
           String c = (String) category.getSelectedItem();
           Product selected = null ;
           boolean f = false;
         
            try {
           // TODO add your handling code here:
           
           
           if(!f){
               for(Product pr : sony){
                   if(pr.getName().equalsIgnoreCase(item))
                   {    
                       System.out.println(pr.getName() + " " + item);
                       f = true;
                       c = "sony";
                       break;
                   }
                   p++;
               }
               if(f)
               selected = sony.get(p);
           }
               if(!f){
                   p=0;
                   for(Product pr : huawei){
                   if(pr.getName().equalsIgnoreCase(item))
                   {    System.out.println(pr.getName() + " " + item);
                        c = "huwawei";
                        f = true;
                        break;
                   }
                   p++;
               }    if(f)
                   selected = huawei.get(p);
               }else
                   if(!f){
                         p=0;
                       for(Product pr : htc){
                   if(pr.getName().equalsIgnoreCase(item))
                   {     System.out.println(pr.getName() + " " + item);
                        c = "htc";
                        f = true;
                       break;
                   }
                   p++;
               }
                    if(f)   selected = htc.get(p);
                   } if(!f){
                         p=0;
                       for(Product pr : iphone){
                   if(pr.getName().equalsIgnoreCase(item))
                   {     System.out.println(pr.getName() + " " + item);
                       f = true;
                       c = "iphone";
                       break;
                   }
                   p++;
               }
                     if(f)  selected = iphone.get(p);
                   } if(!f){
                         p=0;
                       for(Product pr : samsung){
                   if(pr.getName().equalsIgnoreCase(item))
                   {     System.out.println(pr.getName() + " " + item);
                       f = true;
                       c="samsung";
                       break;
                   }
                   p++;
               }
                   if(f)    selected =samsung.get(p);
                   }
               System.out.println("p: " + p);
           
             int q = (int) productsTable.getModel().getValueAt(p, 2);
          
           productsTable.getModel().setValueAt(q+1, p, 2 );
                System.out.println("Selected status");
                System.out.println("selected: " + selected == null);
           m.removeProduct(selected, c);
           cart = m.getCart();
           fillCartTable();
          
       } catch (RemoteException ex) {
           Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
       
           }
    }//GEN-LAST:event_deleteActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       try {
           // TODO add your handling code here:
           String calc = Float.toString(m.calc());
           JOptionPane.showMessageDialog( this, "The total is : "+calc);
           
           cart=m.getCart();
           fillCartTable();
       } catch (RemoteException ex) {
           Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
       }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

       
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
            */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>
           
             
             
             
             
             
             
             
             
             
             
             
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new Client().setVisible(true);
                }
            });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTable cartTable;
    private javax.swing.JComboBox<String> category;
    private javax.swing.JButton delete;
    private javax.swing.JButton getInvoice;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable productsTable;
    // End of variables declaration//GEN-END:variables
}
